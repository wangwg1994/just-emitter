{"version":3,"file":null,"sources":["../src/index.js"],"sourcesContent":["// @flow\n\nfunction bind (eventName, callback) {\n    if (!eventName || !callback) return this;\n\n    let i,\n        len,\n        base,\n        name,\n        events;\n\n    events = eventName.split(' ');\n    len = events.length;\n\n    if (!this.hasOwnProperty('_callbacks')) {\n        this._callbacks || (this._callbacks = {});\n    }\n\n    for (i = 0; i < len; i++) {\n        name = events[i];\n        (base = this._callbacks)[name] || (base[name] = []);\n        this._callbacks[name].push(callback);\n    }\n\n    return this;\n}\n\nfunction unbind (eventName, callback) {\n    let i,\n        j,\n        cb,\n        len,\n        list,\n        name,\n        events;\n\n    if (arguments.length === 0) {\n        this._callbacks = {};\n\n        return this;\n    }\n\n    if (!eventName) return this;\n\n    events = eventName.split(' ');\n\n    for (i = 0, len = events.length; i < len; i++) {\n        name = events[i];\n        list = this._callbacks !== null ? this._callbacks[name] : void 0;\n\n        if (!list) continue;\n\n        if (!callback) {\n            delete this._callbacks[name];\n            continue;\n        }\n\n        for (j = 0; j < list.length; j++) {\n            cb = list[j];\n\n            if (!(cb === callback)) continue;\n\n            list = list.slice();\n            list.splice(j, 1);\n            this._callbacks[name] = list;\n            break;\n        }\n    }\n\n    return this;\n}\n\nfunction once (eventName, callback) {\n    let handler;\n\n    return this.bind(eventName, handler = function() {\n        this.unbind(eventName, handler);\n\n        return callback.apply(this, arguments);\n    });\n}\n\nfunction emit (...args) {\n    let i,\n        j,\n        list,\n        events,\n        callback,\n        eventName;\n\n    eventName = args.shift();\n    events = eventName.split(' ');\n\n    for (i = 0; i < events.length; i++) {\n\n        list = this._callbacks !== null ? this._callbacks[events[i]] : void 0;\n\n        if (!list) continue;\n\n        for (j = 0; j < list.length; j++) {\n            callback = list[j];\n            if (callback.apply(this, args) === false) break;\n        }\n    }\n}\n\nlet Emitter = {\n    bind,\n    on: bind,\n    unbind,\n    off: unbind,\n    once,\n    emit,\n};\n\nexport default Emitter;\n"],"names":["bind","eventName","callback","this","i","len","base","name","events","split","length","hasOwnProperty","_callbacks","push","unbind","j","cb","list","arguments","slice","splice","once","handler","apply","emit","args","shift","Emitter"],"mappings":"4LAEA,SAASA,GAAMC,EAAWC,OACjBD,IAAcC,EAAU,MAAOC,SAEhCC,UACAC,SACAC,SACAC,SACAC,eAEKP,EAAUQ,MAAM,OACnBD,EAAOE,OAERP,KAAKQ,eAAe,oBAChBC,aAAeT,KAAKS,eAGxBR,EAAI,EAAGA,EAAIC,EAAKD,MACVI,EAAOJ,IACbE,EAAOH,KAAKS,YAAYL,KAAUD,EAAKC,YACnCK,WAAWL,GAAMM,KAAKX,SAGxBC,MAGX,QAASW,GAAQb,EAAWC,MACpBE,UACAW,SACAC,SACAX,SACAY,SACAV,SACAC,YAEqB,IAArBU,UAAUR,mBACLE,cAEET,SAGNF,EAAW,MAAOE,YAEdF,EAAUQ,MAAM,KAEpBL,EAAI,EAAGC,EAAMG,EAAOE,OAAQN,EAAIC,EAAKD,SAC/BI,EAAOJ,KACa,OAApBD,KAAKS,WAAsBT,KAAKS,WAAWL,GAAQ,UAIrDL,OAKAa,EAAI,EAAGA,EAAIE,EAAKP,OAAQK,SACpBE,EAAKF,GAEJC,IAAOd,KAENe,EAAKE,UACPC,OAAOL,EAAG,QACVH,WAAWL,GAAQU,oBAXjBd,MAAKS,WAAWL,SAgBxBJ,MAGX,QAASkB,GAAMpB,EAAWC,MAClBoB,gBAEGnB,MAAKH,KAAKC,EAAWqB,EAAU,uBAC7BR,OAAOb,EAAWqB,GAEhBpB,EAASqB,MAAMpB,KAAMe,aAIpC,QAASM,YACDpB,UACAW,SACAE,SACAT,SACAN,SACAD,4BANUwB,+CAQFA,EAAKC,UACRzB,EAAUQ,MAAM,KAEpBL,EAAI,EAAGA,EAAII,EAAOE,OAAQN,SAEA,OAApBD,KAAKS,WAAsBT,KAAKS,WAAWJ,EAAOJ,IAAM,WAI1DW,EAAI,EAAGA,EAAIE,EAAKP,WACNO,EAAKF,GACZb,EAASqB,MAAMpB,KAAMsB,MAAU,GAFVV,MAOrC,GAAIY,cAEI3B,eAECc"}